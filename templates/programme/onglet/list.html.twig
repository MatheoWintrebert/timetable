<turbo-frame id="programme_tray">
  <div class="list-programme-container" data-controller="table">
    <!-- En-t√™te de la liste -->
    <header class="display-header">
      <div class="header-icon">üìã</div>
      <h2 class="header-title">Liste des Programmes</h2>
      <p class="header-subtitle">G√©rez tous les programmes p√©dagogiques de votre √©tablissement</p>
    </header>

    <!-- Flash container -->
    <div id="flash-container"></div>

    {% if programmes is empty %}
      <!-- √âtat vide -->
      <div class="empty-state">
        <div class="empty-icon">üìã</div>
        <h3 class="empty-title">Aucun programme cr√©√©</h3>
        <p class="empty-message">Commencez par cr√©er votre premier programme p√©dagogique pour d√©finir les volumes horaires.</p>
        <div class="empty-action">
          <a href="{{ path('programme_show', { nomOnglet: 'new' }) }}" 
             class="custom-btn custom-btn-primary" 
             data-turbo-frame="programme_tray" 
             data-controller="button-hover">
            <span class="btn-icon">‚ûï</span>
            Cr√©er mon premier programme
          </a>
        </div>
      </div>
    {% else %}
      <!-- Statistiques rapides -->
      <div class="stats-row" data-controller="stats-counter">
        <div class="stat-card" data-stats-counter-target="item">
          <div class="stat-icon">üìã</div>
          <div class="stat-content">
            <div class="stat-value">{{ programmes|length }}</div>
            <div class="stat-label">Programmes cr√©√©s</div>
          </div>
        </div>
        <div class="stat-card" data-stats-counter-target="item">
          <div class="stat-icon">‚è∞</div>
          <div class="stat-content">
            <div class="stat-value">
              {% set totalHeures = 0 %}
              {% for programme in programmes %}
                {% set totalHeures = totalHeures + programme.nbHeures %}
              {% endfor %}
              {{ totalHeures }}
            </div>
            <div class="stat-label">Heures totales</div>
          </div>
        </div>
        <div class="stat-card" data-stats-counter-target="item">
          <div class="stat-icon">üìö</div>
          <div class="stat-content">
            <div class="stat-value">
              {% set uniqueMatieres = [] %}
              {% for programme in programmes %}
                {% if programme.matiere.nom not in uniqueMatieres %}
                  {% set uniqueMatieres = uniqueMatieres|merge([programme.matiere.nom]) %}
                {% endif %}
              {% endfor %}
              {{ uniqueMatieres|length }}
            </div>
            <div class="stat-label">Mati√®res diff√©rentes</div>
          </div>
        </div>
      </div>

      <!-- Table des donn√©es -->
      <div class="table-responsive">
        <table class="data-table">
          <thead>
            <tr>
              <th>
                <div class="th-content">
                  <span class="th-icon">üéØ</span>
                  Niveau
                </div>
              </th>
              <th>
                <div class="th-content">
                  <span class="th-icon">üìö</span>
                  Mati√®re
                </div>
              </th>
              <th>
                <div class="th-content">
                  <span class="th-icon">‚è∞</span>
                  Volume horaire
                </div>
              </th>
              <th>
                <div class="th-content">
                  <span class="th-icon">üìä</span>
                  Aper√ßu
                </div>
              </th>
              <th>
                <div class="th-content">
                  <span class="th-icon">‚öôÔ∏è</span>
                  Actions
                </div>
              </th>
            </tr>
          </thead>
          <tbody>
            {% for programme in programmes %}
              <tr class="table-row" data-table-target="row">
                <td>
                  <div class="cell-content">
                    <div class="cell-main">{{ programme.niveau.nom }}</div>
                    <div class="cell-meta">Niveau d'√©tudes</div>
                  </div>
                </td>
                <td>
                  <div class="cell-content">
                    <div class="matiere-info">
                      <div class="matiere-color" style="background-color: {{ programme.matiere.couleur }};"></div>
                      <div class="matiere-details">
                        <div class="cell-main">{{ programme.matiere.nom }}</div>
                        <div class="cell-meta">{{ programme.matiere.couleur }}</div>
                      </div>
                    </div>
                  </div>
                </td>
                <td>
                  <div class="cell-content">
                    <span class="badge-custom">
                      <span>‚è∞</span>
                      {{ programme.nbHeures }}h/semaine
                    </span>
                  </div>
                </td>
                <td>
                  <div class="cell-content">
                    <div class="programme-preview" style="border-left-color: {{ programme.matiere.couleur }};">
                      <div class="preview-header">
                        <span class="preview-icon">üìñ</span>
                        <span class="preview-subject">{{ programme.matiere.nom }}</span>
                      </div>
                      <div class="preview-details">
                        <span class="preview-level">{{ programme.niveau.nom }}</span>
                        <span class="preview-hours">{{ programme.nbHeures }}h</span>
                      </div>
                    </div>
                  </div>
                </td>
                <td>
                  <div class="action-buttons">
                    <form method="post" 
                          action="{{ path('programme_delete', { id: programme.id }) }}" 
                          style="display:inline" 
                          data-turbo-frame="programme_tray" 
                          data-controller="confirm" 
                          data-confirm-message-value="√ätes-vous s√ªr de vouloir supprimer ce programme ?" 
                          data-action="submit->confirm#ask">
                      <input type="hidden" name="_token" value="{{ csrf_token('delete_programme_' ~ programme.id) }}" />
                      <button type="submit" 
                              class="action-btn btn-delete" 
                              title="Supprimer le programme" 
                              data-controller="button-hover">
                        <span class="btn-icon">üóëÔ∏è</span>
                        <span class="btn-text">Supprimer</span>
                      </button>
                    </form>
                  </div>
                </td>
              </tr>
            {% endfor %}
          </tbody>
        </table>
      </div>
    {% endif %}
  </div>

  <style>
    .matiere-info {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .matiere-color {
      width: 24px;
      height: 24px;
      border-radius: 50%;
      border: 2px solid rgba(255, 255, 255, 0.3);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      flex-shrink: 0;
    }

    .matiere-details {
      flex: 1;
    }

    .programme-preview {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      padding: 0.75rem;
      background: rgba(255, 255, 255, 0.03);
      border-left: 4px solid var(--accent-blue);
      border-radius: 6px;
      transition: all 0.3s ease;
      min-width: 160px;
    }

    .programme-preview:hover {
      background: rgba(255, 255, 255, 0.05);
      transform: translateX(3px);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .preview-header {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .preview-icon {
      font-size: 0.9rem;
    }

    .preview-subject {
      font-weight: 600;
      color: var(--text-light);
      font-size: 0.9rem;
    }

    .preview-details {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 0.8rem;
      color: var(--text-muted);
    }

    .preview-level {
      font-weight: 500;
    }

    .preview-hours {
      font-family: 'Courier New', monospace;
      font-weight: 600;
      color: var(--accent-blue);
    }

    .badge-custom {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      padding: 0.5rem 1rem;
      background-color: rgba(8, 164, 189, 0.1);
      border: 1px solid var(--accent-blue);
      border-radius: 20px;
      color: var(--accent-blue);
      font-size: 0.9rem;
      font-weight: 500;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .programme-preview {
        min-width: auto;
        padding: 0.5rem;
      }

      .preview-details {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.25rem;
      }

      .matiere-info {
        gap: 0.75rem;
      }

      .matiere-color {
        width: 20px;
        height: 20px;
      }
    }
  </style>
</turbo-frame>